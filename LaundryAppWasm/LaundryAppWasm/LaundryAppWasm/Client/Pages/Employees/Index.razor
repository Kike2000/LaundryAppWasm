@page "/Employees"
@using LaundryAppWasm.Shared
@using LaundryAppWasm.Shared.DTOs
@inject HttpClient Http

<PageTitle>Index</PageTitle>


@if (EmployeesDTO == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Position</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in EmployeesDTO)
            {
                <tr>
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.Position</td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Create Employee Record</h3>

<label>First Name:</label>
<input @bind="Employee.FirstName" />
<label>Last Name:</label>
<input @bind="Employee.LastName" />
<label>Email:</label>
<input @bind="Employee.Email" />
<label>Position:</label>
<input @bind="Employee.Position" />

<button @onclick="CreateItem">Create</button>

@code {
    private IEnumerable<EmployeeDTO>? EmployeesDTO;
    public EmployeeDTO Employee { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        EmployeesDTO = await Http.GetFromJsonAsync<List<EmployeeDTO>>("api/employee");
    }
    private async Task LoadItems()
    {
        EmployeesDTO = await Http.GetFromJsonAsync<List<EmployeeDTO>>("api/employee");
    }
    private async Task CreateItem()
    {
        var response = await Http.PostAsJsonAsync("api/employee", Employee);

        if (response.IsSuccessStatusCode)
        {
            await LoadItems();
            Employee = new EmployeeDTO();
        }
        else
        {
            
        }
    }

}
